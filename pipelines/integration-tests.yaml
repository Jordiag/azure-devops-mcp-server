trigger: none

resources:
  pipelines:
    - pipeline: buildPipeline
      source: Build
      trigger:
        branches:
          include: [ main ]

pool:
  vmImage: 'windows-latest'

variables:
  - group: 'Integration tests'
  - name: buildConfiguration
    value: 'Release'
  - name: solution
    value: 'Dotnet.AzureDevOps.sln'
  - name: sonarProjectKey
    value: 'Chanlabs_Dotnet.AzureDevOps'
  - name: sonarOrganization
    value: 'chanlabs-1'

steps:
- checkout: self

# Ensure .NET 9 SDK is available
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '9.0.x'
    includePreviewVersions: true

# SonarCloud Begin (latest version)
- task: SonarCloudPrepare@3
  inputs:
    SonarCloud: 'SonarQube'
    organization: '$(sonarOrganization)'
    scannerMode: 'dotnet'
    projectKey: '$(sonarProjectKey)'
    projectName: 'Dotnet.AzureDevOps'
    extraProperties: |
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/test/integration.tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" --logger:"trx"'
  env:
    AZURE_DEVOPS_PAT: $(AZURE_DEVOPS_PAT)
    AZURE_DEVOPS_PIPELINE_ID: $(AZURE_DEVOPS_PIPELINE_ID)
    AZURE_DEVOPS_PROJECT_ID: $(AZURE_DEVOPS_PROJECT_ID)
    AZURE_DEVOPS_REPO_ID: $(AZURE_DEVOPS_REPO_ID)
    AZURE_DEVOPS_REPOSITORY_ID: $(AZURE_DEVOPS_REPOSITORY_ID)
    OPENAI_API_KEY: $(OPENAI_API_KEY)
    AZURE_OPENAI_DEPLOYMENT: $(AZURE_OPENAI_DEPLOYMENT)
    AZURE_OPENAI_ENDPOINT: $(AZURE_OPENAI_ENDPOINT)
    AZURE_OPENAI_KEY: $(AZURE_OPENAI_KEY)

- task: SonarCloudAnalyze@3

- task: SonarCloudPublish@3
  inputs:
    pollingTimeoutSec: '300'
